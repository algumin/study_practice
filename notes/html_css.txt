		***CSS***
#id {}				так можна застововувати селектори для надання властивостей для id
.class {}			так можна застововувати селектори для надання властивостей для class
[type='radio'] {}	так можна застововувати селектори для надання властивостей для вибірці для типу атрибуту
/*все, шо в середені, буде розпізнаватися, як коментар*/
Margin (right: 4px), left, top, bottom, auto, 					- зовнішній відступ. auto - виставить по центру.
or [margin:3px 4px 5px 6px])

				Приорітети в CSS з браузером
1) !important атрибут в CSS
2) <h1 style="color: green;"> 
3) id
4) останній задекларований клас в CSS
5) просто задекларований клас в CSS

				змінні CSS
.penguin {									так записуються змінні в CSS
    --penguin-skin: black;}

background: var(--penguin-skin, black);		а так змінні використовуюьтся. Зауважимо, шо значення black після коми не є 
											обовязковим, а використовується для того, щоби, в разі не підтримки браузером змінних,
											або якшо змінна не задана, примусово використати визначену. Тобто схема "якщо не, то"
			псевдо в CSS
:root {										цей псевдо селектор звертиється до кореневого тега (HTML), і, в доному випадку,
      --penguin-belly: pink;				всі елементи, на які не буде переназначено кольору будуть рожевого кольору.
	  										Так використовують спадковості для оптимізації коду. Всі змінні, створені таким чином
											дозволяють використовувати їх в будь якому селекторі згодом (глобально). При чому, значення 
											цих змінних в ішних селекторах можна переназначати.



padding (right(: 4px), left, top, bottom, auto, 				- внутрішній відступ
or [padding:3px 4px 5px 6px])
	*{									- "* {.....}" такий запис означає, що всі елементи веб-
	margin: 0;								сторінки будуть мати такі характеристики (в даному випадку
	padding: 0;								всі елементи веб-сторінки не будуть мати внутрішнього і 
	}									зовнішнього відступів)
height 										- висота
widght										- ширина
text-align: center;								- так задається місцезнаходження тексту (в даному випадку в центрі)
min-width: 900px;								- задається мінімальна ширина веб-сторінки в відкні віндовс
										При звужені вікна браузера веб-сторінка звузиться тільки до 900
font-size 									- розмір шрифта
font-weight: bold;								- так шрифт стане жирним
<link rel="stylesheet" type="text/css" href="assets/css/style.css">		- так пыдключаються CSS стилі в Java
cursor: pointer;								- змінює курсор, коли наводити на обєкт
font: normal 300% 'century gothic', arial, sans-serif;				- приклад задавання шрифтових опцій
letter-spacing: 0.1em;								- інтервал між символами
text-decoration: none;								- звичайний текст
text-decoration: underline;							- ПІДКРЕСЛЕНИЙ ТЕКСТ
text-decoration: line-through;							- перекреслений текст
text-decoration: overline;							- лінія над текстом
ul.menu {float: right;}		(left)						- позначили, що список буде торкатися правої сторони. 
										зазвичай float йде разом з width, позначаючи ширину елемента.
										А, якшо "float" вжили для картинки, то текст в тому ж 
										блоці буде картинку обтікати.
clear: both;									- даний стиль забороняє обтіканню обєкта і дозволяє йому
										лишатися на одному місці, незалежно від к-сті тексту навколо.
list-style:none;	(square,inside,url('/media/examples/rocket.svg')	- стиль списку (в даному випадку забрали крапки перед
										кожним рядком списка)
display: block;									- означає, шо ми не блочний елемент хочемо перетворити 
										в блочний
overflow: hidden;								- якшо шось виходить за рамки, заданого розміру обєкта,
										 то воно не буде відображатися.
border: solid 1px #f2f2f2;							- границя довкола обєкта. Solid - суцільна лінія.
border-radius: 5px;								- завкругляння границі довкола обєкту
border-top-left-radius: 5px;  border-top-right-radius: 5px;			- завкруглення границі рамки можна зробити вибірково.
										2 записи про завкруглення лівого і правого верхніх кутів
border-color: red;						|
    border-width: 5px;					|так ще можна використати властивості рамки
    border-style: solid;				|
	
	

input[type="text"], input[type="password"], input[type="search"] {		- такий запис в CSS означає, шо для конкретних інпутів
	color: #5d5d5d;								на цій веб-сторінці ми задали параметри кольору, ширини,
	width: 60%;								а також внутрішнього відступу.
	padding: 8px; }


input, textarea {								- такий запис в CSS означає, шо для полів, де можна буде
	outline: none;								вводити якусь інформацію (пароль, пошук, логін) не буде
	border: none;								появлятися додаткова (нова) лінія навколо поля, яке ми  
	border: solid 1px #f2f2f2;  }						зробили активним і охарактеризували ту лінію (незмінну).
										outline VS   - впилває на ширину елемента 
										border  VS   - не впливає не ширину елемента.

cursor: pointer;								- при наведені на обєкт, курсор змінюється на "курсор-РУКУ"
line-height: 1.7em;								- інтервал між лінійками в тексті

Текст часто є значною частиною Web контенту. У CSS є кілька варіантів того, як можна вирівняти його 
за допомогою властивості text-align.
text-align: justify; 			вирівнює текст за шириною.
text-align: center; 			вирівнює текст по центру.
text-align: right; 				вирівнює текст за правим краєм.
А text-align: left; 			(за замовчуванням) вирівнює текст за лівим краєм.


<s></S> <strong></strong> 		робить текст жирним в html
font-weight: bold;				робить текст жирним в CSS
text-decoration: underline;		підкреслює текст (<u></u>)
font-style: italic;				робить текст "писаним" (<em></em>)
text-decoration: line-through;	перекреслений текст (<s></s>)
<hr>							в html додає горизонтальну розділювальну лінію

background-color:				змінює фон елемента

background: repeating-linear-gradient(90deg, yellow 0px, blue 40px, green 40px, red 80px); 	так можна вказувати градієнт з повторенням
background: url(https://cdn-media-1.freecodecamp.org/imgr/MJAkxbh.png)						також фон підтримує url(). можна в фон 
																							закинути будь-яке забраження з нету
linear-gradient(35deg,#ccffff,#ffcccc);														замальовує елмент в кольори, розділяючи
																							його калькість вказаних кольорів.


 transform: scale(1.5); 		трансформ змінює елемент. трансформ в парі з скейлом змінює розмір. в дужках коефіцієнт.
transform: skewX(24deg);		в парі з skewX скошує елемент по осі Х 
transform: skewY(-10deg);		в парі з skewY скошує елемент по осі Y 
transform: rotate(-45deg);		виконує поворот елементами




Властивість box-shadow приймає значення

offset-x (наскільки далеко відсунути тінь від елемента по горизонталі)
offset-y (наскільки далеко відсунути тінь від елемента по вертикалі)
blur-radius,
spread-radius і
color, в такому порядку.
Значення blur-radius та spread-radius є необов'язковими.
Можна створити кілька тіней, використовуючи коми для розділення властивостей кожного елемента box-shadow.
box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);

 opacity: 0.7;					робить елемент прозорим (0 - повнітю прозорий, 1 - зовсім не прозорий)
 
 Наступна таблиця показує, як різні значення text-transform змінюють приклад тексту "Зміни мене".
Значення	Результат
lowercase	"зміни мене"
uppercase	"ЗМІНИ МЕНЕ"
capitalize	"Зміни мене"
initial	Використовувати значення за замовчуванням
inherit	Використовуйте значення text-transform з батьківського елемента
none	За замовчуванням: Використовуйте вихідний текст

line-height: 25px;				змінює висоту рядка до 25 пікселів
font-size: 2em;					змінює розмір шрифта *2 в два рази відносно розміру по умолчанію. (можна розмір вказувати в післелях)
font-weight: 200;				змінює товщину кожної букви в тексті.

a:hover {color: red;}			псевдо. при наведені курсором на алемент "а", змінює колір елемента на червоний.
div:hover {transform: scale(1.1);}	так можна збільшити якийсь елемент при наведені на нього
:focus 
::before and ::after

.heart::before {
  content: "";					це мусить бути. Без нього не буде відображатися дане псевдо.
  background-color: yellow;
  border-radius: 25%;
  position: absolute;
  height: 50px;
  width: 70px;
  top: -50px;
  left: 5px;
}

.....
.....
						******colors*******
color: 
		red;
		#000000
		hsl(0, 100%, 50%)	(Hue - 0-360 відтінок, Saturation 0%-100% насиченіть, 
							Lightness - 0% (чорний)-50%(нормальний)-100%(білий) світність )
		
						******position*****
position: **			змінює розміщення елемента, якому задали цю властивість і має декілька значень.
	reletive;			відносна. (left or right, and top or bottom).
	bottom: 20px (3em) (30%) 	в даному випадку цей тег в HTML структурі не поміняє розміщення елементів довла себе, а лише
								переміститься на пікселі, ем-ми чи проценти від батьківських розмірів в напрямку знизу вверх.
	absolute;			таке позиціонування елемента буде відштовхуватися не від родича, а від вікна браузера
	fixed;				подібне до абсолют позиціонування, але відмінність в тому, що елемнт буде зафісований, не залежно від скролу
	sticky;				
	z-index: 1 (-1)		так можна визначати z-координату для елемента. 
						******FLEX*******
						for flex containers
display: flex;					записується для застосування флексів в якомусь блоці і за умовчуванням блок лишиться блочним.
								При тому всі елементи даного блоку	за умовчуванням висторояться в ряд і будуть ніби скеєні 
								і не будуть перескакувати в інші ряди, а при звуженні вікна будуть виходити за межі блоку.
display: inline-flex;			в такому випадку вл-сть блочності закінчиться і блок огорне всі свої елементи.

justify-content: 				задає горизонтальний порядок в флексах: ВИЗНАЧАЄ ВІДСТАНІ МІЖ ЕЛЕМЕНТАМИ В РЯДКАХ 
								(за замовчуванням значення flex-start)
justify-content: flex-start;	переміщає елементи на початок (вліво)	
justify-content: flex-end;		переміщає елементи вправо
justify-content: center;		на центер
justify-content: space-between;	якшо є 3 елемента, то 1 і 3 будуть прижаті відповідно до лівого і правого краю, а 2 елемент
								буде рівно посереднині, рівновіддалений від 1 і 2.
justify-content: space-around;	в кожного елемента появиться відстань з обох боків, при тому від країв вікна до елементів
								буде 1х, а між елементами буде 2х.
justify-content: space-evenly;	робить одниніковий простір по ободва боки кожного елемента в рядку (стовбці)

align-content: center			ВИЗНАЧАЄ ВІДСТАНІ МІЖ РЯДКАМИ ПРИ FLEX-WRAP ВЛАСТИВОСТЯХ
align-content: flex-start
align-content: flex-end
align-content: space-between
align-content: space-around

align-items:					задає вертикальний порядок в флексах: ВІДСТАНІ МІЖ СТОВБЦЯМИ
								(за замовчуванням значення stretch)
align-items: stretch;			flex-елементи підстроюються під висоту найвищого елемента
align-items: flex-start;		всі елементи прижаті до верху, відміниться stretch
align-items: flex-end;			всі елементи прижаті до низу, відміниться stretch
align-items: center;			всі елементи вистроюються по уявномій осі центра найвищого елемента  
align-items: baseline;			всі елементи розкладаються по базовій лінії (на практиці рідко зустрічається)



flex-wrap:						(за замовчуванням значення ). 
flex-wrap: nowrap;				Якраз то і регуює то, шо наші елементи не перескакують в новий рядок (стовбець) 
								і лишаються в тому самому.
flex-wrap: wrap;				елементи почнуть перескакувати в наспупний рядок (стовпець) при зміні ширини (висоти) браузера
flex-wrap: wrap-reverse;		елементи почнуть перескакувати в наспупний рядок (стовпець) в зворотньому порядку
								при зміні ширини (висоти) браузера
flex-direction: row;			row - зн. за замовчуванням. Вистроює флекс-елементи в ряд. Основна вісь - горизонтальна.
flex-direction: row-reverse;	Вистроює флекс-елементи в ряд в зворотньому порядку, напрямок вліво. Основна вісь - горизонтальна.
flex-direction: column;			Вистроює флекс-елементи в колонку. Основна вісь - вертикальна.
flex-direction: column-reverse;	Вистроює флекс-елементи в колонку в зворотньому порядку, напрямок - в верх. Основна вісь - вертикальна.

flex-flow: column wrap;			короткий запис ([напрямок (row or column] пробєл [wpap or nowrap])

						
						******FLEX*******
						for flex elements (властивості, які можна додати (перезаписати) для окремих флекс елементів)
align-self: stretch;			flex-елемент підстроюється під висоту найвищого елемента
align-self: flex-start;			елемент прижатий до верху, відміниться stretch
align-self: flex-end;			елемент прижатий до низу, відміниться stretch
align-self: center;				елемент вистроюється по уявномій осі центра найвищого елемента в ряді або стовбці  
align-self: baseline;			елемент розкладається по базовій лінії (шрифта) (на практиці рідко зустрічається)

order: 1 (2) (3);				так можна міняти порядок всіх флекс-елементів в флекс-боксі-контейнері. Вимагається задавати
								його для всіх елементів блоку.
flex-basis: auto;				встановлює базовий розмір елемента. По замовчуванні зн. auto робить такий розмір елемента, 
								як і розмір контенту, вложеного в нього. Можна вказувати зн. % або px.
flex-grow: 0 or 1;				контролює можливість елемента збільшуватися відносно зн. flex-basis (розширюватися). 
								0 - заборона. 1 - дозволяє.
flex-shrink: 0 or 1;			контролює можливість елемента зменшуватися відносно зн. flex-basis (звужуватися).
								0 - заборона. 1 - дозволяє.
flex: 0 1 auto;					коротка форма запису 3-х попередніх. (flex: grow shrink basis).


		***HTML***
<div></div>									- блочний елемент


<span class="lavel">Рейтинг:</span><span class="value">8.1 / 10</span>		- "Рейтинг:", "8.1 / 10", "год: ", "2014", "режиссер: ",
<span class="lavel">год: </span><span class="value">2014</span>			і "Кристофер Нолан"  тут запишуться в рядочок
<span class="lavel">режиссер: </span><span class="value">Кристофер Нолан</span>	 

<meta name="viewport" content="width=device-width, intitial-scale-1.0">		- цей тег дозволяє адаптувати веб сторінку для різних девайсів
header										- головна панель веб-сторінки, блочний
footer										- нижня панель веб-сторінки, блочний
<nav></nav>									- для організації навігації або меню, блочний
sidebar										- боковий елемент (блок)
<h1>(h2 h3 h4 h5 h6)</h1>					- блочний тег. Позначає заголовк.
<p></p>										- блочний. Тег позначає параграф, кусок тексту, абзац.
<span></span>								- не блочний елемент. Для підкреслення частини тексту в середині блочного тега.
<a href="" target="_blank"></a>				- не блочний тег. Для створення посилань. Там можне бути текст, інші не блочні тег, малюнки.
<img src="ресурс(шлях)" alt="опис картинки"/>- не блочний (строчний) тег. Для виводу картинок.


<div class="menubar"></div>		("."+"enter")		- створення списку (це пропись списку)
<ul class="menu"><li></li></li></ul>				- блочний. створення маркерованого списку 
<ol><li></li></ol>									- блочний. створення нумерованого списку
<li class="selected"><a href="#">Главная<a/></li>	- блочний. елемент списку. selected(для того, шоб можна було особливо вибрати стиль обєкту),
													 "#" (для того, щоби ссилка нікуди не відкривалася)
<br/>												- не блочний. Для перенесення неблочних тегів в наступний рядок.

<form action=""></form>								- блочний. Виступає вроді оболонки усієї форми, як якщик з інструментами.
		action="#"									- атрибут дозволяє вказати адресу (сервера), на яку полетять наші дані з форми.
		method=""									- атрибут відповідає за метод передачі даних. може мати 2 значення:
														get - за замовчуванням. Передача даних йду прямо в адреснй строці. дані
															видно любому користувачеві і можуть бути використані багато разів.
															Підходить для передачі малого обєму даних.
														post - передає дані таємно, використовуючи запрос браузера. Це дозволяє
															відправити набагато більше даних. Для того, щоби наша форма вміла
															відправляти, наприклад, файли, то треба метод "post"
		enctype="multipart/form-data"				-  не відомо (треба почитати)
						теги для форми
<input type="text"/>								- не блочний. Тег для створення механізму введення інформації користувачем.
		type="text"			- text за замовчуванням. Атрибут створює маленьке поле, в якому можна вводити текст.
		type="TEL"			- в поле вводу можна ввести тільки цифри.
		type="password"		- все, шо користувач запише в це поле, буде проховане зірочками, як поле для паролю
		type="radio"		- перемикач (радіо кнопка). В такому випадку значення атрибута name треба ставити однаковим для
							всього переліку варіантів радіо кнопок, що буде робоити їх приналежними до одного вибоку (або, або),
							а атрибут value буде вигонувати роль варіанта вибору.
			checked			якшо добавити цей атрибут до одного з імпутів, то цей імпут зразу після загрузки буде вибраним (позначеним)
			required		цей атрибут надає інпуту властивості обовязковості. Користувач не може засубмітити без заповненого поля.

		type="checkbox"		- дозволить сворити чекбокс. При цьому кожен елемент в атрибуті name повинен мати унікальне значення.  
		type="file"			- строрює кнопу вибору файла
		name="username"		- цей атрибут існує для того, щоби взаємодіяти з сервером. Шоби сервер знав в яке поле записати інфу
		value="значення"	- зазвичай цей атрибут лишаєть пустим, коли type="text". Він дозволяє в поле для запису інфи вже 
							по замовчуванні записати якийсь текст (цей текс тожна буде змінити на сторінці в бровзері)
<textarea name="" id="" cols="30" rows="10"></textarea> - створює таке більше поле для введення тексту. Найважливішом атрибутом
														тут є name="". Решту можна видалаяти, бо формат можна скорегувати в ccs.
<select name=""></select>							- обгортка випадаючого списку
		multiple=""				- цей атрибут змінює вигляд з випадаючого списку в відкритий, де можна виділити кільки опцій відразу.
<option value=""></option>							- елемент випадаючого списку. Він маєміститися тезі option. 
		selected				- так можна позначити якийсь опшін вибраним за замовчуванням

<botton type="">Send</botton>						- тег для створення кнопки
		type="submit"			- це значення атрибута type надасть кнопці властавість відсилати всі дані з нашої форми
		type="reset"			- це значення атрибута type надасть кнопці властавість очистити всі поля форми
		



														




ul.menu li.selected a {	color: #aeb002;}					- позначили іншим кольором selected рядок з списку
<li><a href="#">Фильмы</a></li>							- звичайне позначення нового рядка списку(без ссилки)

<img src="assets/img/inter.png">						- так добавляться малюнок 

<h2>Поиск</h2>									- так прописується блок "пошук". method - метод(є різні);
    <form method="post" action="#" id="search_form">				action - дія, або ссилка на адрес сайта; id - ідентифікатор
	<input type="search" name="search_field" placeholder="ваш запрос" />	форми, унікальне імя форми
	<input type="submit" class="btn" value="найти" />			input - поле для введення інфи; type - тип вводу(їх багато)
    </form>									placeholder - то, шо пише на фоні поля для введення інфи,
										в input нема закриваючого тега. Просто вкіці "/>"
										input type search - поле для пошуку
										input type submit - кнопка і "value" - то як буде називатися
										ця кнопка.

<hr>										- ствоюється лінія (горизонтальна)
<div>										- так можна створити таблицю (4 стовпці і 2 рядки)
<table>										<table></table> - оголошення таблиці
	<tr>									<tr></tr> - оголошення рядка
		<th></th>	
		<th></th> - оголошення ЗАГОЛОВКІВ стовпців (кожен містить 1 клітинку)
		<th>Фильмы</th>
		<th class="center">Год</th>
		<th class="center">Рейтинг</th>
	</tr>
	<tr>	
		<td class="center"><img src="assets/img/inter.png"></td>	<td></td> - кожна клітинка 2-го рядка
		<td>1. <a href="show.html">Интерстеллар</a></td>
		<td class="center">2014</td>
		<td class="center rating">8.1</td>
	</tr>
</table>
</div>


display: none;									- якшо так написати в CSS, то даний обєкт не буде виводититися в бровзері





			***JAVA***
// "Comment me"									- так можна коментувати в одному рядку
/* "and"									- а так можна коментувати в багатьох рядках
	"ME!"   */

