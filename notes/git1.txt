git add index.html			гіт почне слідкувати за цим файлом (включить його доможливості комітування)
git add -A					гіт почне слудкувати за всіми файлами в значенні "Untracted" (можна додати всі зразу)
git add .					такий запис також дозволяє додати всі нові або змінені файли до можливості коміту
git status 					гіт покаже нам 2 списки: untracted (якшо такий є);
													 changes to be commited (список файлів, які вже внесенні для слідкування)
git rm --cached <file>		відміняє комінду add для окремих файлів або для всіх (-A)
cls							камада очищає вікно консолі
ls							команда показує папку, в якій ми зараз є, і вміст папки
cd vasyl					команда перейте в папку василь
cd ..						команда перейде на крок вверх по ієрархії
 							
git commit -m "commit_name"	роботить так звану фіксовану точку (приготовлює пакет змін файлів, який можна буде запушати на GIT-hub)
							команда -m "" дозволяє нам присвоїти імя для даної точка в історії комітів
.gitignore					це імя файлу, який ствоюється в кореневій папці проекту. це текстовий документ, в якому в список записуються 
							всі файли, небажані для коміту, які не стосуються тіла проекту, а вживаюся для розробки. При цьому
							потрібна додавати сам файл .gitignore, щоби гіт знав про існування такого файлу. Можна ігнорувати також 
							цілі папки. Запис для ігноруванння папок буде таким: /<folder name>
git branch					основна команда для гілок в гіті. Так можна глянути кількисть гілок в нащому репозиторії і поревірити,
							в яка з гілок є активною зараз.
git branch new				команда створить нову гілку з назвою "new"

git branch -D new			так можна видалити нашу гілку "new" командою "-D"
git checkout new			так можна переключитися на гілку "new" з іншої гілки
git checkout -b new1		такий скорочений запис для того, щоби, сидячи на одній гілці, створити іншу і пересісти на на цю іншу.
							параметр "-b" означає
git checkout new			переключить нас на гілку "new"
git merge new1				таким записом, сидячи на гілці "new" ми обєднуєм 2 гілки ("new" i "new1") так, шо всі файли з "new1",
							яких не було в "new" добавляться в "new".
git branch -M main			переіменовує імя гілки

git config --global user.name			ця команда виведе догін, під яким ми зараз комітимо (працюємо)
git config --global user.name "oleg"	якшо в кінці в лапках дописати імя, то так можна перейти під іншого користувача для гіт
git config --global user.email 			то саме робиться для імейла


							